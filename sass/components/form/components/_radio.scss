// Default form radio Properties
$default-component-form-radio-properties:(
  backgroundColor: getThemeProperty(backgroundColorLight),
  checkedIcon: "\f192",
  checkedTextColor: getThemeProperty(textColorDark),
  notCheckedIcon: "\f111",
  notCheckedTextColor: getThemeProperty(textColorDark),
  iconFontFamily: getThemeProperty(fontIcon),
);
// If $component-form-radio-properties is set, lets merge into our defaults
$component-form-radio-properties: $default-component-form-radio-properties !default;
@if($component-form-radio-properties){
  $component-form-radio-properties: map-merge($default-component-form-radio-properties, $component-form-radio-properties);
}

.fw-form{
  fieldset.field div, 
  .field.optionset div, 
  ul.optionset li{
    position: relative;
    input[type='radio']{
      width: max-content;
      border: none;
      -moz-appearance: initial; // Enables pseudo elements in FireFox
      min-width: 13px; // Does not inherit width in Firefox. Used for spacing
      &::before{
        font-family: getThemeProperty(iconFontFamily, $component-form-radio-properties);
        border-radius: 25px;
        content: getThemeProperty(notCheckedIcon, $component-form-radio-properties);
        font-weight: 400;
        position: absolute;
        top: 2px;
        left: 2px;
        font-size: 2em;
        line-height: 1;
        cursor: pointer;
        -webkit-transition: all .2s;
        transition: all .2s;
        color: getThemeProperty(notCheckedTextColor, $component-form-radio-properties);
        background: getThemeProperty(backgroundColor, $component-form-radio-properties);
      }
      &:checked::before{
        content: getThemeProperty(checkedIcon, $component-form-radio-properties);
        color: getThemeProperty(checkedTextColor, $component-form-radio-properties);
      }
      + label{
        display: inline-flex;
        align-items: center;
        width: max-content;
        margin: 10px 0;
        padding-left: 15px;
        line-height: 1;
        cursor: pointer;
      }
      &.readonly{
        pointer-events: none;
        &::before{
          cursor: default;
          background: getThemeProperty(disabledColor, $component-form-properties);
        }
        + label{
          cursor: default;
          pointer-events: none;
        }
      }
    }
  }
  // Focus Styles
  fieldset.field > div div, 
  .field.optionset li,
  ul.optionset li{
    @include focus-within-style;
  }
}