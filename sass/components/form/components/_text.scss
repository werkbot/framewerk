// Default form text Properties
$default-component-form-text-properties:(
  borderColor: getThemeProperty(borderColor, $component-form-properties),
  shiftingLabelColor: getThemeProperty(labelColor, $component-form-properties),
  textColor: getThemeProperty(textColorDark),
  fontFamily: getThemeProperty(fontText),
  fontSizes: (
      desktop: (1em, 1.4),
      tablet: (1em, 1.4),
      phone: (1em, 1.4)
  )
);
// If $component-form-text-properties is set, lets merge into our defaults
$component-form-text-properties: $default-component-form-text-properties !default;
@if($component-form-text-properties){
  $component-form-text-properties: recursive-map-merge($default-component-form-text-properties, $component-form-text-properties);
}

.fw-form{
  .field.text{
    label{
      display: block;
      transform: translate(20px, 45px);
      transform-origin: left;
      transition: transform .25s ease;
      color: getThemeProperty(shiftingLabelColor, $component-form-text-properties);
      pointer-events: none;
      margin: 0;
      &.labelShrunk{
        transform: scale(.7) translate(30px, 40px);
      }
    }
    input{
      padding: 30px 20px 10px 20px;
      width: 100%;
      box-sizing: border-box;
      border: 1px solid getThemeProperty(borderColor, $component-form-text-properties);
      color: getThemeProperty(textColor, $component-form-text-properties);
      font-family: getThemeProperty(fontFamily, $component-form-text-properties);
      @include font-size(getThemeProperty(fontSizes, $component-form-text-properties));
      &.labelShrunk{
        padding: 30px 20px 10px 20px;
      }
      @include focus-style;
    }
  }
}
