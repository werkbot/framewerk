@use "../../../variables/theme";
@use  "../form";

// Default form text-with-button Properties
$default-component-form-text-with-button-properties: (
  backgroundColor: getThemeProperty(backgroundColorLight),
  borderColor: getThemeProperty(borderColor, $component-form-properties),
  borderRadius: 10px,
  borderWidth: 2px,
  buttonBorderRadius: 0 10px 10px 0,
  textPadding: 20px,
);

// If $component-form-text-with-button-properties is set, lets merge into our defaults
$component-form-text-with-button-properties: $default-component-form-text-with-button-properties !default;
@if ($component-form-text-with-button-properties) {
  $component-form-text-with-button-properties: map-merge($default-component-form-text-with-button-properties, $component-form-text-with-button-properties);
}

.fw-form {
  .field.text-with-button {
    position: relative;
    label {
      display: block;
      position: absolute;
      transform: translate(20px, 25px);
      transform-origin: left;
      transition: transform .25s ease;
      color: getThemeProperty(shiftingLabelColor, $component-form-text-properties);
      pointer-events: none;
      margin: 0;
      z-index: 1;
      &.labelShrunk {
        transform: scale(.7) translate(30px, 20px);
      }
    }
    input[type=text],
    input[type=date],
    input[type=time],
    input[type=datetime-local],
    input[type=search],
    input[type=tel],
    input[type=url],
    input[type=week],
    input[type=month],
    input[type=email],
    input[type=password],
    textarea {
      width: 100%;
      border-radius: getThemeProperty(borderRadius, $component-form-text-with-button-properties);
      padding: getThemeProperty(textPadding, $component-form-text-with-button-properties);
      margin: 0;
      border-style: solid;
      border-width: getThemeProperty(borderWidth, $component-form-text-with-button-properties);
      border-color: getThemeProperty(borderColor, $component-form-text-with-button-properties);
      background-color: getThemeProperty(backgroundColor, $component-form-text-with-button-properties);
      &.labelShrunk {
        padding: 30px 20px 10px 20px;
      }
      @include focus-style;
      &.readonly {
        pointer-events: none;
        background: getThemeProperty(disabledColor, $component-form-properties);
      }
    }
    .fw-form-processing-container,
    button, input[type="submit"] {
      position: absolute !important;
      top: 0;
      right: 0;
      height: 100%;
    }

    button, input[type="submit"] {
      @include button-input-style;
      /*
        & {} repeats the above selector after nested :hover rules instead of pulling declarations up to the top level
        https://sass-lang.com/documentation/breaking-changes/mixed-decls/

        Example output CSS:
          button, input[type="submit"] {
            padding: 10px 40px;
          }

          button:hover, input[type="submit"]:hover {}

          button, input[type="submit"] {
            padding-top: 0; // Overwrites padding-top from above by appearing later in the CSS
          }


        Instead of:
          button, input[type="submit"] {
            padding: 10px 40px;
            padding-top: 0;
          }

          button:hover, input[type="submit"]:hover {}
      */
      & {
        padding-top: 0;
        padding-bottom: 0;
        margin: 0;
        border-radius: getThemeProperty(buttonBorderRadius, $component-form-text-with-button-properties);
      }
    }
  }

  // Label above field
  &.fw-form-label-above {
    .field.text-with-button {
      label {
        position: relative;
        transform: none;
        margin: getThemeProperty(labelAboveMargin, $component-form-properties);
        &.labelShrunk {
          transform: none;
        }
      }
      input {
        padding: 20px;
        &.labelShrunk {
          padding: 20px;
        }
      }
    }
  }
}
