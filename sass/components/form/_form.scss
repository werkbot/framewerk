// Default form checkbox Properties
$default-component-form-properties:(
  borderColor: var(--componentFormProperties_borderColor, #cccccc),
  labelColor: var(--componentFormProperties_labelColor, #cccccc),
  disabledColor: var(--componentFormProperties_disabledColor, #dddddd),
  fieldSpacing: var(--componentFormProperties_fieldSpacing, getThemeProperty(layoutSpace)),
  validationErrorTextColor: var(--componentFormProperties_validationErrorTextColor, #ffffff),
  validationErrorBackgroundColor: var(--componentFormProperties_validationErrorBackgroundColor, #cc0000),
  validationSuccessTextColor: var(--componentFormProperties_validationSuccessTextColor, #000000),
  validationSuccessBackgroundColor: var(--componentFormProperties_validationSuccessBackgroundColor, #00cc00),
  validationWarningTextColor: var(--componentFormProperties_validationWarningTextColor, #000000),
  validationWarningBackgroundColor: var(--componentFormProperties_validationWarningBackgroundColor, #ffcc00),
);
// If $component-form-checkbox-properties is set, lets merge into our defaults
$component-form-properties: $default-component-form-properties !default;
@if($component-form-properties){
  $component-form-properties: map-merge($default-component-form-properties, $component-form-properties);
}

// General Form Styles
.fw-form{
  // Field Spacing
  .field{
    margin: getThemeProperty(fieldSpacing, $component-form-properties) 0;
  }
  // Validation/Messages
  .message{
    padding: getThemeProperty(layoutSpace, $component-form-properties);
    display: block;
    &.error,
    &.bad,
    &.validation{
      color: getThemeProperty(validationErrorTextColor, $component-form-properties);
      background: getThemeProperty(validationErrorBackgroundColor, $component-form-properties);
    }
    &.warning{
      color: getThemeProperty(validationWarningTextColor, $component-form-properties);
      background: getThemeProperty(validationWarningBackgroundColor, $component-form-properties);
    }
    &.good{
      color: getThemeProperty(validationSuccessTextColor, $component-form-properties);
      background: getThemeProperty(validationSuccessBackgroundColor, $component-form-properties);
    }
  }

  // Button Style Applied to input submit
  input[type=submit]{
    @include button-input-style;
    &:disabled{
      pointer-events: none;
      background: getThemeProperty(disabledColor, $component-form-properties);
      &:hover{
        background: getThemeProperty(disabledColor, $component-form-properties);
      }
    }
  }
}

// Components
@import 'components/radio';
@import 'components/checkbox';
@import 'components/text';
@import 'components/textarea';
@import 'components/select';
@import 'components/numeric';
@import 'components/form-process';