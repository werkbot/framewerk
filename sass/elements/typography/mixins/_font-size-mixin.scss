/*
  FONT SIZE
*/
@mixin font-size($fs-map, $propertiesPrefix: '', $fs-breakpoints: getThemeProperty(breakpointResponsive)) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    $breakpointDeviceName: $fs-breakpoint;
    @if $breakpointDeviceName == desktop {
      @include make-font-size($fs-font-size, $propertiesPrefix, 'desktop');
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (max-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size, $propertiesPrefix, $breakpointDeviceName);
      }
    }
  }
}
// Utility function for mixin font-size
@mixin make-font-size($fs-font-size, $propertiesPrefix, $breakpointDeviceName) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: var(--#{$propertiesPrefix}_fontSizes_#{$breakpointDeviceName}_fontSize, nth($fs-font-size, 1));
    @if (length($fs-font-size) > 1) {
      line-height: var(--#{$propertiesPrefix}_fontSizes_#{$breakpointDeviceName}_lineHeight, nth($fs-font-size, 2));
    }
  }
  @else {
    font-size: var(--#{$propertiesPrefix}_fontSizes_#{$breakpointDeviceName}_fontSize, $fs-font-size);
  }
}
