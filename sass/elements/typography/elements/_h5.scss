// Default h5 Properties
$default-element-h5-properties:(
    color: var(--elementH5Properties_color, getThemeProperty(HeadingColor, $component-typography-properties)),
    fontFamily: var(--elementH5Properties_fontFamily, getThemeProperty(fontHeader)),
    fontWeight: var(--elementH5Properties_fontWeight, 400),
    fontSizes: (
        desktop: (1.313em, getThemeProperty(HeadingLineHeight, $component-typography-properties)),
        tablet: (1.313em, getThemeProperty(HeadingLineHeight, $component-typography-properties)),
        phone: (1.313em, getThemeProperty(HeadingLineHeight, $component-typography-properties))
    ),
    margin: var(--elementH5Properties_margin, getThemeProperty(HeadingMargin, $component-typography-properties)),
    textTransform: getThemeProperty(HeadingTextTransform, $component-typography-properties),
    letterSpacing: getThemeProperty(HeadingLetterSpacing, $component-typography-properties)
);
// If $element-h5-properties is set, lets merge into our defaults
$element-h5-properties: $default-element-h5-properties !default;
@if($element-h5-properties){
  $element-h5-properties: recursive-map-merge($default-element-h5-properties, $element-h5-properties);
}

h5{
  color: getThemeProperty(color, $element-h5-properties);
  font-family: getThemeProperty(fontFamily, $element-h5-properties);
  font-weight: getThemeProperty(fontWeight, $element-h5-properties);
  text-transform: getThemeProperty(textTransform, $element-h5-properties);
  letter-spacing: getThemeProperty(letterSpacing, $element-h5-properties);
  @include font-size(getThemeProperty(fontSizes, $element-h5-properties));
}

.fw-typography-spacing{
  h5{
    margin: getThemeProperty(margin, $element-h5-properties);
  }
}
