@use "../../../variables/theme";
@use  "../typography";

// Default h5 Properties
$default-element-h5-properties: (
    color: theme.getThemeProperty(HeadingColor, $component-typography-properties),
    fontFamily: theme.getThemeProperty(fontHeader),
    fontWeight: 400,
    fontSizes: (
        desktop: (1.313em, theme.getThemeProperty(HeadingLineHeight, $component-typography-properties)),
        tablet: (1.313em, theme.getThemeProperty(HeadingLineHeight, $component-typography-properties)),
        phone: (1.313em, theme.getThemeProperty(HeadingLineHeight, $component-typography-properties))
    ),
    margin: theme.getThemeProperty(HeadingMargin, $component-typography-properties),
    textTransform: theme.getThemeProperty(HeadingTextTransform, $component-typography-properties),
    letterSpacing: theme.getThemeProperty(HeadingLetterSpacing, $component-typography-properties)
);
// If $element-h5-properties is set, lets merge into our defaults
$element-h5-properties: $default-element-h5-properties !default;
@if ($element-h5-properties) {
  $element-h5-properties: recursive-map-merge($default-element-h5-properties, $element-h5-properties);
}

h5 {
  color: theme.getThemeProperty(color, $element-h5-properties);
  font-family: theme.getThemeProperty(fontFamily, $element-h5-properties);
  font-weight: theme.getThemeProperty(fontWeight, $element-h5-properties);
  text-transform: theme.getThemeProperty(textTransform, $element-h5-properties);
  letter-spacing: theme.getThemeProperty(letterSpacing, $element-h5-properties);
  @include font-size(theme.getThemeProperty(fontSizes, $element-h5-properties));
}

.fw-typography-spacing {
  h5 {
    margin: theme.getThemeProperty(margin, $element-h5-properties);
  }
}
