// Default ol Properties
$default-element-ol-properties:(
    listStyle: var(--elementOLProperties_listStyle, decimal outside),
    color: var(--elementOLProperties_color, getThemeProperty(TextColor, $component-typography-properties)),
    fontFamily: var(--elementOLProperties_fontFamily, getThemeProperty(fontText)),
    fontWeight: var(--elementOLProperties_fontWeight, 400),
    fontSizes: (
        desktop: (1em, getThemeProperty(TextLineHeight, $component-typography-properties)),
        tablet: (1em, getThemeProperty(TextLineHeight, $component-typography-properties)),
        phone: (1em, getThemeProperty(TextLineHeight, $component-typography-properties))
    ),
    margin: var(--elementOLProperties_margin, 0 0 getThemeProperty(layoutSpace) getThemeProperty(layoutSpace)),
    textTransform: getThemeProperty(TextTextTransform, $component-typography-properties),
    letterSpacing: getThemeProperty(TextLetterSpacing, $component-typography-properties)
);
// If $element-ol-properties is set, lets merge into our defaults
$element-ol-properties: $default-element-ol-properties !default;
@if($element-ol-properties){
  $element-ol-properties: recursive-map-merge($default-element-ol-properties, $element-ol-properties);
}

ol{
	list-style: getThemeProperty(listStyle, $element-ol-properties);
  color: getThemeProperty(color, $element-ol-properties);
  font-family: getThemeProperty(fontFamily, $element-ol-properties);
  font-weight: getThemeProperty(fontWeight, $element-ol-properties);
  text-transform: getThemeProperty(textTransform, $element-ol-properties);
  letter-spacing: getThemeProperty(letterSpacing, $element-ol-properties);
  @include font-size(getThemeProperty(fontSizes, $element-ol-properties));
}

.fw-typography-spacing{
  ol{
    margin: getThemeProperty(margin, $element-ol-properties);
  }
}
