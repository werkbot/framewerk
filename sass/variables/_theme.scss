/*
  Theme Properties
*/
$default-theme-properties: (
  // Colors
  primaryColor: #999999,
  secondaryColor: #000000,
  tertiaryColor: #cccccc,
  backgroundColorLight: #ffffff,
  backgroundColorDark: #333333,
  textColorLight: #ffffff,
  textColorDark: #333333,

  // Fonts
  fontHeader: "Montserrat",
  fontText: "Roboto",
  fontIcon: "Font Awesome 6 Free",

  // Layout
  layoutSpace: 20px,
  layoutContainerWdth: 1366px,

  // Breakpoints
  breakpointDesktop: (
    desktop: 1366px
  ),
  breakpointResponsive: (
    desktopsmall: 1366px,
    tablet: 1024px,
    phone : 600px
  )
);

/*
  getThemeProperty
  Returns the property value requested, either with the $theme-properties or the passed in $properties
  - $key - The map element to lookup
  - $properties - a map of properties to use instead of the default $theme-properties
  - ex:
    `color: getThemeProperty(primaryColor)`;
*/
@function getThemeProperty($key, $properties:()) {
  @if(length($properties) > 0){ // Check to see if any properties were passed in
    @if(map-get($properties, $key)){ // Check if the key exists in the properties
      @return map-get($properties, $key);
    }@else{
      @return getThemeProperty($key); // Fall back to the theme properties
    }
  }@else{
    @if(map-get($theme-properties, $key)){
      @return map-get($theme-properties, $key);
    }@else{
      @return #00ff00; // The key was not found, so we return this color as an error
    }
  }
}

/*
  Recursive Map Merge
*/
@function recursive-map-merge($parent-map, $child-map) {
  $result: $parent-map;
  @each $key, $value in $child-map {
    @if (not map-has-key($result, $key)) or (type-of(map-get($result, $key)) != type-of($value)) or (not (type-of(map-get($result, $key)) == map and type-of($value) == map)) {
      $result: map-merge($result, ($key: $value));
    }
    @else {
      $result: map-merge($result, ($key: recursive-map-merge(map-get($result, $key), $value)));
    }
  }
  @return $result;
}

// If $theme-properties is set, lets merge into our defaults
$theme-properties: $default-theme-properties !default;
@if($theme-properties){
  $theme-properties: recursive-map-merge($default-theme-properties, $theme-properties);
}
