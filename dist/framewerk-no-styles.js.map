{"version":3,"file":"framewerk-no-styles.js","mappings":"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","sources":["webpack://werkbot-framewerk/./js/form.js"],"sourcesContent":["window.addEventListener('load', function(){\r\n\r\n  // Shrink input and textarea field labels\r\n  document.querySelectorAll('.fw-form input[type=text],\\\r\n    .fw-form input[type=date],\\\r\n    .fw-form input[type=time],\\\r\n    .fw-form input[type=datetime-local],\\\r\n    .fw-form input[type=search],\\\r\n    .fw-form input[type=tel],\\\r\n    .fw-form input[type=url],\\\r\n    .fw-form input[type=week],\\\r\n    .fw-form input[type=month],\\\r\n    .fw-form input[type=email],\\\r\n    .fw-form input[type=password],\\\r\n    .fw-form textarea\\\r\n  ').forEach(function(inputElement){\r\n    toggleInputState(inputElement);\r\n    // On focus, shrink the label\r\n    inputElement.addEventListener('focus', function(event){\r\n      shrinkLabel(event.target);\r\n    });\r\n    // On blur, toggle the state\r\n    inputElement.addEventListener('blur', function(event){\r\n      toggleInputState(event.target);\r\n    });\r\n  });\r\n\r\n  // Shrink select field label\r\n  document.querySelectorAll('.fw-form select').forEach(function(selectElement){\r\n    selectElement.classList.add('labelShrunk');\r\n    var label = getLabel(selectElement);\r\n    if(label){\r\n      label.classList.add('labelShrunk');\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Form Processing\r\n   * Disables all form fields and replaces the submit button with a span element whcih\r\n   * can be configured in the css\r\n   */\r\n  document.querySelectorAll('.fw-form.fw-form-process-event').forEach(function(formElement){\r\n    formElement.addEventListener('submit', function(event){\r\n      // Check the validity of the form, if any fields are not valid do not move forward\r\n      if(!this.checkValidity()){\r\n        // Invalid form elements, halt\r\n        e.preventDefault();\r\n      }else{\r\n        // create wrapper container if it does not exist already\r\n        var wrapper = this.querySelector('.fw-form-processing-container');\r\n        if(!wrapper){\r\n          wrapper = document.createElement('div');\r\n          wrapper.className = \"fw-form-processing-container\";\r\n          // insert wrapper before el in the DOM tree\r\n          event.submitter.parentNode.insertBefore(wrapper, event.submitter);\r\n          // move el into wrapper\r\n          wrapper.appendChild(event.submitter); \r\n        }\r\n\r\n        // Create \"Processing\" element \r\n        const processingElement = document.createElement(\"span\");\r\n        processingElement.className = \"fw-form-processing\";\r\n        wrapper.appendChild(processingElement); \r\n\r\n        // Disable submit button\r\n        event.submitter.disabled = true;\r\n\r\n        // Disable all fields\r\n        var fields = this.getElementsByTagName('*');\r\n        for(var i = 0; i < fields.length; i++)\r\n        {\r\n          fields[i].classList.add(\"readonly\");\r\n          // Check for number input type\r\n          if(fields[i].type==\"number\"){\r\n            fields[i].parentElement.parentElement.classList.add(\"readonly\");\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Listener for a form reset event, useful for ajax calls.\r\n    // This will reset the form to its original state\r\n    formElement.addEventListener('reset', function(event){\r\n      // Remove the processing element\r\n      const p = this.querySelector('.fw-form-processing');\r\n      // The element may have been deleted after processing\r\n      if (p) {\r\n        p.parentElement.removeChild(p);\r\n      }\r\n\r\n      // Re-enable all fields\r\n      var fields = this.getElementsByTagName('*');\r\n      for(var i = 0; i < fields.length; i++)\r\n      {\r\n        fields[i].classList.remove(\"readonly\");\r\n        fields[i].disabled = false;\r\n        // Check for number input type\r\n        if(fields[i].type==\"number\"){\r\n          fields[i].parentElement.parentElement.classList.remove(\"readonly\");\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Toggle Input State\r\n   * Shrinks or unshrinks the label of the element passed in\r\n   * @param inputElement - The input whose label we want to toggle\r\n   */\r\n  function toggleInputState(inputElement){\r\n    if(inputElement.value || inputElement.placeholder || inputElement === document.activeElement\r\n      || inputElement.type == 'date'\r\n      || inputElement.type == 'time'\r\n      || inputElement.type == 'datetime-local'\r\n      || inputElement.type == 'week'\r\n      || inputElement.type == 'month'\r\n      || inputElement.type == 'password'\r\n    ){\r\n      shrinkLabel(inputElement);\r\n    } else {\r\n      unshrinkLabel(inputElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shrink Label\r\n   * Shrinks the label of the element passed in\r\n   * @param inputElement - The input whose label we want to shrink\r\n   */\r\n  function shrinkLabel(inputElement){\r\n    var label = getLabel(inputElement);\r\n    if(label){\r\n      label.classList.add('labelShrunk');\r\n      inputElement.classList.add('labelShrunk');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unshrink Label\r\n   * Unshrinks the label of the element passed in\r\n   * @param inputElement - The input whose label we want to unshrink\r\n   */\r\n  function unshrinkLabel(inputElement){\r\n    var label = getLabel(inputElement);\r\n    if(label){\r\n      label.classList.remove('labelShrunk');\r\n      inputElement.classList.remove('labelShrunk');\r\n    }\r\n  }\r\n\r\n  // Numeric Field\r\n  document.querySelectorAll('.fw-form .numeric').forEach(function(numericFieldContainer){\r\n    var field = numericFieldContainer.querySelector('input');\r\n    if(field){\r\n      field.type = 'number';\r\n      if(!numericFieldContainer.parentElement.querySelector('.subtract-qty')){\r\n        // Insert subtract button\r\n        var subtractButton = document.createElement('span');\r\n        subtractButton.classList.add('subtract-qty');\r\n        var subtractIcon = document.createElement('i');\r\n        subtractIcon.classList.add('fas');\r\n        subtractIcon.classList.add('fa-minus');\r\n        subtractButton.append(subtractIcon);\r\n        numericFieldContainer.append(subtractButton);\r\n        subtractButton.style.top = field.offsetTop + 'px';\r\n        subtractButton.style.height = field.offsetHeight + 'px';\r\n        subtractButton.addEventListener('click', function(){\r\n          incrementQuantity(numericFieldContainer, -1);\r\n        });\r\n      }\r\n\r\n      if(!numericFieldContainer.parentElement.querySelector('.add-qty')){\r\n        // Insert add button\r\n        var addButton = document.createElement('span');\r\n        addButton.classList.add('add-qty');\r\n        var addIcon = document.createElement('i');\r\n        addIcon.classList.add('fas');\r\n        addIcon.classList.add('fa-plus');\r\n        addButton.append(addIcon);\r\n        numericFieldContainer.append(addButton);\r\n        addButton.style.top = field.offsetTop + 'px';\r\n        addButton.style.height = field.offsetHeight + 'px';\r\n        addButton.addEventListener('click', function(){\r\n          incrementQuantity(numericFieldContainer, 1);\r\n        });\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  /**\r\n   * Increment Quantity\r\n   * @param element fieldContainer - The button that was clicked\r\n   * @param integer increment - The amount to increment by\r\n   */\r\n  function incrementQuantity(fieldContainer, increment){\r\n    if(!fieldContainer.classList.contains('readonly')){\r\n      var field = fieldContainer.querySelector('input');\r\n      field.value = Number(field.value) + increment;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get Label\r\n   * Returns the label associated with the element, label must have `for` attribute\r\n   * @param element el\r\n   * @returns label element\r\n   */\r\n  function getLabel(el){\r\n    var labels = document.getElementsByTagName('label');\r\n    for( var i = 0; i < labels.length; i++ ) {\r\n      if (labels[i].htmlFor == el.id){\r\n        return labels[i];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n});\r\n"],"names":["window","addEventListener","toggleInputState","inputElement","value","placeholder","document","activeElement","type","shrinkLabel","label","getLabel","classList","remove","unshrinkLabel","add","incrementQuantity","fieldContainer","increment","contains","field","querySelector","Number","el","labels","getElementsByTagName","i","length","htmlFor","id","querySelectorAll","forEach","event","target","selectElement","formElement","this","checkValidity","wrapper","createElement","className","submitter","parentNode","insertBefore","appendChild","processingElement","disabled","fields","parentElement","e","preventDefault","p","removeChild","numericFieldContainer","subtractButton","subtractIcon","append","style","top","offsetTop","height","offsetHeight","addButton","addIcon"],"sourceRoot":""}